import { jsPDF } from "jspdf"

export async function exportToPdf(url: string, reportData: any, aiInsights: string) {
  try {
    // Create a new PDF document
    const doc = new jsPDF({
      orientation: "portrait",
      unit: "mm",
      format: "a4",
    })

    // Add title
    doc.setFontSize(20)
    doc.setTextColor(0, 200, 0) // Green color
    doc.text("Sitegeist Report", 20, 20)

    // Add URL
    doc.setFontSize(12)
    doc.setTextColor(100, 100, 100) // Gray color
    doc.text(`Site: ${url}`, 20, 30)
    doc.text(`Generated: ${new Date().toLocaleDateString()}`, 20, 37)

    // Add horizontal line
    doc.setDrawColor(50, 50, 50)
    doc.line(20, 40, 190, 40)

    // Add key metrics section
    doc.setFontSize(16)
    doc.setTextColor(0, 200, 0)
    doc.text("Key Metrics", 20, 50)

    doc.setFontSize(12)
    doc.setTextColor(0, 0, 0)
    doc.text(`Revenue Impact: $${reportData.metrics.revenueLost}`, 25, 60)
    doc.text(`Users Lost: ${reportData.metrics.usersLost}`, 25, 67)
    doc.text(`Health Score: ${reportData.metrics.structuralDecay}%`, 25, 74)
    doc.text(`Orphaned Pages: ${reportData.issues.orphanPages.length}`, 25, 81)
    doc.text(`Dead Links: ${reportData.issues.deadLinks.length}`, 25, 88)
    doc.text(`Dead Ends: ${reportData.issues.deadEnds.length}`, 25, 95)

    // Add AI Insights section
    doc.setFontSize(16)
    doc.setTextColor(0, 200, 0)
    doc.text("AI Insights", 20, 110)

    // Format and add AI insights text with word wrapping
    doc.setFontSize(10)
    doc.setTextColor(0, 0, 0)
    const splitInsights = doc.splitTextToSize(aiInsights, 170)
    doc.text(splitInsights, 20, 120)

    // Add issues details if they fit
    let yPosition = 120 + splitInsights.length * 5

    if (yPosition < 250) {
      // Check if we have space on the page
      // Add orphaned pages section
      doc.setFontSize(14)
      doc.setTextColor(0, 200, 0)
      doc.text("Orphaned Pages", 20, yPosition)

      yPosition += 10
      doc.setFontSize(10)
      doc.setTextColor(0, 0, 0)

      reportData.issues.orphanPages.slice(0, 3).forEach((page, index) => {
        doc.text(`â€¢ ${page.url}`, 25, yPosition)
        yPosition += 5
        doc.setTextColor(100, 100, 100)
        doc.text(`  ${page.note}`, 25, yPosition)
        doc.setTextColor(0, 0, 0)
        yPosition += 8
      })
    }

    // Add footer
    doc.setFontSize(8)
    doc.setTextColor(100, 100, 100)
    doc.text("Generated by Sitegeist - Your site is haunted. We see the spirits.", 20, 285)

    // Save the PDF
    doc.save(`sitegeist-report-${new Date().toISOString().slice(0, 10)}.pdf`)

    return true
  } catch (error) {
    console.error("PDF export error:", error)
    return false
  }
}
